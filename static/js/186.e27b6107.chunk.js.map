{"version":3,"file":"static/js/186.e27b6107.chunk.js","mappings":"6PAwDA,UA/CgB,WACb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBP,OApBDE,EAAAA,EAAAA,YAAU,WACP,GAAGN,EAAS,CACb,IAAMO,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,cAERK,EAFQ,OAGdR,EAAWQ,GACXN,GAAa,GAJC,mDAQdF,EAAW,MARG,yBAWdE,GAAa,GAXC,oFAAH,qDAclBI,GACA,CACD,GAAE,CAACH,EAASJ,KAGf,yBACIA,EAKwB,IAAnBA,EAAQU,QAAgBR,GAAc,SAAC,KAAD,yDAC5C,SAAC,KAAD,UACCF,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,SAAC,KAAD,WACA,UAAC,KAAD,YACA,UAAC,KAAD,uBAAoB,SAAC,KAAD,UAAaD,QACjC,SAAC,KAAD,UAAaC,QAHIF,EADR,OANT,UAAC,IAAD,CAAeG,UAAU,UAAUC,eAAe,UAAlD,WACE,SAAC,IAAD,CAAUC,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAAKC,aAAc,OACzD,SAAC,IAAD,CAAUC,MAAO,EAAGJ,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAAKC,aAAc,SAe5E,C,6OCpDYE,EAAgBC,EAAAA,GAAAA,IAAH,qVAiBbC,EAAcD,EAAAA,GAAAA,GAAH,+KASXE,EAAaF,EAAAA,GAAAA,GAAH,6CAIVG,EAAaH,EAAAA,GAAAA,EAAH,wGAMVI,EAAaJ,EAAAA,GAAAA,KAAH,uGAOVK,EAAaL,EAAAA,GAAAA,EAAH,gEAKVM,EAAON,EAAAA,GAAAA,GAAF,gO,2NChDlBO,EAAAA,EAAAA,SAAAA,QAAwB,gCACxB,IAAMC,EAAS,mCAEFC,EAAa,kCAEbC,EAAW,mCAAG,WAAMC,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,qCAAwCC,EAAxC,iBAAuDG,IADtD,cAClBC,EADkB,yBAEjBA,EAAS1B,KAAK2B,SAFG,2CAAH,sDAKXC,EAAe,mCAAG,WAAMC,EAAOJ,GAAb,uFACLJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAiEO,EAAjE,iBAA+EJ,EAA/E,yBADK,cACtBC,EADsB,yBAErBA,EAAS1B,KAAK2B,SAFO,2CAAH,wDAKfG,EAAe,mCAAG,WAAOnC,GAAP,uFACL0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,oBAAsC2B,EAAtC,oBADK,cACtBI,EADsB,yBAErBA,EAAS1B,MAFY,2CAAH,sDAKf+B,EAAY,mCAAG,WAAOpC,GAAP,uFACF0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,4BAA8C2B,EAA9C,oBADE,cACnBI,EADmB,yBAElBA,EAAS1B,KAAKgC,MAFI,2CAAH,sDAKZjC,EAAe,mCAAG,WAAOJ,GAAP,uFACL0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,4BAA8C2B,EAA9C,2BADK,cACtBI,EADsB,yBAErBA,EAAS1B,KAAK2B,SAFO,2CAAH,qD,qPCrBtBM,EAAuBC,EAAAA,cAAoB,CAAC,GA2BlD,SAASC,EAAT,GAMI,IANgL,IAC5KC,EAAIC,EAAIC,EADoK,IAAhK1B,MAAAA,OAAgK,MAAxJ,EAAwJ,EAA5I2B,EAA4I,EAArJC,QAA6BC,EAAwH,EAAnIC,UAA4BC,EAAuG,EAAvGA,mBAAoBC,EAAmF,EAAnFA,gBAAmF,IAAlEC,OAAAA,OAAkE,SAA3CC,EAA2C,EAAlDtC,MAAqBuC,GAA6B,YAE1KC,EAAsBd,EAAAA,WAAiBD,GACvCgB,GAAoB,UAAKF,GAG/B,MAA2BG,OAAOC,QAAQJ,GAA1C,eAAsE,CAAjE,sBAAOK,EAAP,KACoB,qBADpB,aAEUH,EAAkBG,EAEhC,CAED,IAAMC,GAAe,0BACdL,GACAC,GAFW,IAGdJ,OAAAA,IAGErC,GAAQ,kBACPsC,GAzCX,YAAyK,IAAlIxC,EAAkI,EAAlIA,UAAWC,EAAuH,EAAvHA,eAAgBG,EAAuG,EAAvGA,MAAOD,EAAgG,EAAhGA,OAAQ6C,EAAwF,EAAxFA,aAAcT,EAA0E,EAA1EA,OAAQU,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,SAAuD,IAA7CC,gBAAAA,OAA6C,SAC/JjD,EAAQ,CAAC,EAmBf,MAlBkB,QAAd+C,IACA/C,EAAM,yBAA2B,WACb,kBAAbgD,IACPhD,EAAM,wBAAN,UAAmCgD,EAAnC,MACCC,IACDjD,EAAM,4BAA8B,QACnB,kBAAVE,GAAuC,kBAAVA,IACpCF,EAAME,MAAQA,GACI,kBAAXD,GAAyC,kBAAXA,IACrCD,EAAMC,OAASA,GACS,kBAAjB6C,GAAqD,kBAAjBA,IAC3C9C,EAAM8C,aAAeA,GACrBT,IACArC,EAAM8C,aAAe,OACA,qBAAdhD,IACPE,EAAM,gBAAkBF,GACE,qBAAnBC,IACPC,EAAM,qBAAuBD,GAC1BC,CACV,CAqBUkD,CAA4BL,IAE/BX,EAAY,yBACZD,IACAC,GAAa,IAAJ,OAAQD,IAIrB,IAHA,IAAMkB,EAAwC,QAA9BvB,EAAKiB,EAAaM,cAA2B,IAAPvB,GAAgBA,EAChEwB,EAAW,GACXC,EAAYC,KAAKC,KAAKnD,GACnBoD,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAChC,IAAIC,EAAYzD,EAChB,GAAIqD,EAAYjD,GAASoD,IAAMH,EAAY,EAAG,CAO1C,IAAMnD,EAAmC,QAA1B2B,EAAK4B,EAAUvD,aAA0B,IAAP2B,EAAgBA,EAAK,OAChE6B,EAAiBtD,EAAQ,EACzBuD,EAAmC,kBAAVzD,EACzBA,EAAQwD,EADU,eAEVxD,EAFU,cAECwD,EAFD,KAGxBD,GAAY,kBAAKA,GAAR,IAAmBvD,MAAOyD,GACtC,CACD,IAAMC,EAAgBlC,EAAAA,cAAoB,OAAQ,CAAEQ,UAAWA,EAAWlC,MAAOyD,EAAWb,IAAKY,GAAK,UAClGL,EACAC,EAASS,KAAKD,GAKdR,EAASS,KAAKnC,EAAAA,cAAoBA,EAAAA,SAAgB,CAAEkB,IAAKY,GACrDI,EACAlC,EAAAA,cAAoB,KAAM,OAErC,CACD,OAAQA,EAAAA,cAAoB,OAAQ,CAAEQ,UAAWC,EAAoB,cAAeC,EAAiB,YAAa,SAAU,YAAqD,QAAvCN,EAAKe,EAAaI,uBAAoC,IAAPnB,GAAgBA,GAA+BC,EAClOqB,EAAS1D,KAAI,SAACoE,EAAIN,GAAL,OAAW9B,EAAAA,cAAoBK,EAAS,CAAEa,IAAKY,GAAKM,EAApD,IACbV,EACT,CAED,SAASW,EAAT,GAAsD,IAA7BC,EAA6B,EAA7BA,SAAanB,GAAgB,YAClD,OAAQnB,EAAAA,cAAoBD,EAAqBwC,SAAU,CAAEC,MAAOrB,GAAgBmB,EACvF,C","sources":["components/Reviews/Reviews.jsx","components/Reviews/reviews.styled.js","services/fetch-movie.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css'\n\nimport { getMovieReviews } from 'services/fetch-movie';\n\nimport { WrapperReview, ReviewsList, ReviewItem, AuthorText, AuthorSpan, Title,  TextReview } from './reviews.styled';\n\nconst Reviews = () => {\n   const [reviews, setReviews] = useState([]);\n   const [isLoading, setIsLoading] = useState(false);\n   const { movieId } = useParams();\n\n   useEffect(() => {\n      if(reviews) {\n     const fetchReviews = async () => {\n        try {\n            const data = await getMovieReviews(movieId);\n            setReviews(data);\n            setIsLoading(true);\n            return;\n        }\n        catch{\n            setReviews(null);\n        }\n        finally {\n            setIsLoading(false);\n        };\n     }\n     fetchReviews();\n    };\n   }, [movieId, reviews]);\n\n    return (\n <div>\n   {!reviews ? (\n        <SkeletonTheme baseColor=\"#E0CEA7\" highlightColor=\"#a5a5a5\">\n          <Skeleton style={{ height: 30, width: 250, marginBottom: 15 }} />\n          <Skeleton count={5} style={{ height: 20, width: 600, marginBottom: 5 }} />\n        </SkeletonTheme>\n      ) : reviews.length === 0 || isLoading ?  (<Title>We don't have any reviews for this movie.</Title>) : (\n    <ReviewsList>\n    {reviews.map(({id, author, content}) => (\n        <ReviewItem key={id}>\n        <WrapperReview>\n        <AuthorText>Author: <AuthorSpan>{author}</AuthorSpan></AuthorText>\n        <TextReview>{content}</TextReview>\n        </WrapperReview>\n        </ReviewItem>\n        ))}\n    </ReviewsList>)}\n  </div>\n );\n}; \n\nexport default Reviews;","import styled from 'styled-components';\n\nexport const WrapperReview = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 12px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  transition: all 0.2s ease-in-out;\n  padding: 5px;\n \n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n    backdrop-filter: blur(5px);\n    color: #000000;\n  }\n`;\n\nexport const ReviewsList = styled.ul`\n    list-style: none;\n    padding:30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nexport const ReviewItem = styled.li`\n    // padding:5px;\n`;\n\nexport const AuthorText = styled.p`\n   font-weight: bold;\n   font-size: 20px;\n   font-family: 'Gambetta', serif;\n`; \n\nexport const AuthorSpan = styled.span`\n   font-weight: 400;\n   font-size:20px;\n   \n   text-decoration: underline;\n`;\n\nexport const TextReview = styled.p`\n  font-size:18px;\n  line-height: 1.2;\n`;\n\nexport const Title= styled.h2`\n    font-family: 'Gambetta', serif;\n    font-variation-settings: \"wght\" 311;\n    margin-top:30px;\n    margin-bottom: 0.8rem;\n    font-weight: bold;\n    margin-left: 20px;\n    font-size: 28px;\n`;","import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3/';\nconst apiKey = '0d4113c4d386d0ed78ee145d93be1c52';\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';;\n\nexport const getAllMovie = async(page) => {\n   const response = await axios.get(`trending/movie/day?api_key=${apiKey}&page=${page}`);\n   return response.data.results;\n};\n\nexport const getSearchMovies = async(query, page) => {\n   const response = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n   return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}?api_key=${apiKey}&language=en-US`);\n   return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n   return response.data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n   return response.data.results;\n};","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviews","getMovieReviews","data","length","map","id","author","content","baseColor","highlightColor","style","height","width","marginBottom","count","WrapperReview","styled","ReviewsList","ReviewItem","AuthorText","AuthorSpan","TextReview","Title","axios","apiKey","baseImgUrl","getAllMovie","page","response","results","getSearchMovies","query","getMovieDetails","getMovieCast","cast","SkeletonThemeContext","React","Skeleton","_a","_b","_c","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el","SkeletonTheme","children","Provider","value"],"sourceRoot":""}