{"version":3,"file":"static/js/200.389a21f1.chunk.js","mappings":"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","sources":["components/Button/button.styled.js","components/Button/Button.jsx","components/MoviesList/movies-list.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/home.styled.js","components/SearchMovies/search-movies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx","services/fetch-movie.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n    display: flex;\n    margin-left: 28px;\n`;\n\nexport const Btn = styled.button`\n    background-color: #fff;\n    color:  #432A68 ;\n    font-size: 16px;\n    padding: 10px 20px;\n    display: inline-block;\n    border-radius: 100px;\n    border-color: transparent;\n    transition: all .2s;\n    margin-right: 12px;\n    margin-bottom: 20px;\n\n    &:hover, &:focus {\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    color: #8E0E00;\n    font-weight: bold;\n    }\n    &:disabled {\n    cursor: not-allowed;\n    opacity: 0.4;\n    color:  #432A68 ;\n    font-weight: 400;\n    }\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { Wrap, Btn } from './button.styled';\n\nconst Button =({page, totalPages, onClick}) => {\n\n    return (\n        <Wrap>\n         {page >= 2 &&<Btn type='button' \n         disabled={page === 1}\n         onClick={() => onClick(page - 1)}>Prev page</Btn>}\n         <Btn type='button'  \n         onClick={() => onClick(page + 1)} \n         disabled={page === totalPages}>Next page</Btn>\n        </Wrap>\n    )\n};\n\nexport default Button;\n\nButton.propTypes = {\n    page: PropTypes.number.isRequired,\n    totalPages: PropTypes.number,\n    onClick: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport listIcon from 'images/list-icon.png';\n\nexport const Item = styled.li`\n    padding: 5px;\n    margin-left: 10px;\n    position: relative;\n    display: flex;\n\n    &::before{\n    content: \"\";\n    background-image: url(${listIcon});\n    background-size: cover;\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    left: -25px;}\n\n    @media screen and (max-width: 480px) {\n        &::before{\n            width: 15px;\n            height: 15px;\n        }\n    };\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin-left: 45px;\n`;\n\nexport const MovieLink = styled(Link)`\n    text-decoration: none;\n    color: #22211B  ;\n    font-size: 20px;\n    font-weight: 500;\n\n    &:hover, &:focus{\n    transform: translateX(20px); \n   };\n\n   @media screen and (max-width: 767px) {\n    font-size: 16px;\n\n    &:hover, &:focus{\n    transform: translateX(16px); };\n   };\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { Item, List, MovieLink } from './movies-list.styled';\n\nconst MoviesList = ({movies}) => {\n  const location = useLocation();\n\n  const elements = movies.map(({title, id}) => \n    <Item key={id} >\n    <MovieLink state={{from: location}} to={`/movies/${id}`}>{title}</MovieLink>\n    </Item>);\n\n  return (\n     <List>\n     {elements}\n     </List>\n  )\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n   movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};","import styled from 'styled-components';\nimport background from 'images/background-img.jpg';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  height: 100vh;\n  margin: 0px 0px;\n  padding: 0px 0px;\n\n  &::before {\n    content: \"\";\n    background-image: url(${background});\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    opacity: 0.7;\n}`;\n\nexport const MainTitle = styled.h2`\n  font-family: 'Gambetta', serif;\n  transition: 700ms ease;\n  font-variation-settings: \"wght\" 311;\n  margin-bottom: 0.8rem;\n  font-weight: bold;\n  margin-left: 35px;\n  font-size: 28px;\n  text-transform: uppercase;\n  transition: 700ms ease;\n   color: #090907 ;\n\n  &:hover {\n    font-variation-settings: \"wght\" 582; \n    letter-spacing: 1px;\n    }\n`;","import styled from 'styled-components';\nimport { GoSearch } from 'react-icons/go';\n\nexport const Wrap = styled.div`\n    margin-top: 24px;\n    margin-bottom: 20px;\n    margin-left: 78px;\n\n    input {\n        background-color: #fff;\n    color:  #432A68 ;\n    font-size: 16px;\n    padding: 10px 24px;\n    border-color: transparent;\n    transition: all .2s;\n    display: inline-block;\n    border: 0;\n    outline: 0;\n    border-radius: 5em;\n    position: absolute;\n    }\n`;\n\nexport const Icon = styled(GoSearch)`\n    width: 20px;\n    height: 20px;\n    position: relative;\n    z-index: 1;\n    opacity: 0.7;\n    left: 210px;\n    top: 10px;\n`;","import PropTypes from 'prop-types';\nimport { DebounceInput } from 'react-debounce-input';\n\nimport {Wrap, Icon } from './search-movies.styled';\n\nconst SearchMovies = ({onChange, search}) => {\n    return ( \n        <Wrap >\n         <DebounceInput type=\"text\" \n         debounceTimeout={500}\n         name=\"search\"\n         value={search}\n         placeholder=\"Search movie\" \n         onChange={event => onChange(event.target.value)}\n         autoComplete='off'\n         autoFocus\n         required/>\n         <Icon />\n        </Wrap>\n    );\n};\n\nexport default SearchMovies;\n\nSearchMovies.propTypes = {\n    onChange : PropTypes.func,\n    search: PropTypes.string,\n};","import { useState, useEffect, useCallback } from 'react';\nimport { toast } from \"react-toastify\";\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovies } from 'services/fetch-movie';\n\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Button from 'components/Button/Button';\n\nimport { Container } from 'pages/Home/home.styled';\n\nconst Movies = () => {\n const [movies, setMovies] = useState([]);\n const [error, setError] = useState(null);\n const [page, setPage] = useState(1);\n\n const [searchParams, setSearchParams] = useSearchParams();\n const query = searchParams.get(\"query\") || \"\";\n\n useEffect(() => {\n    if(!query) {\n      return;\n    } const fetchSearchMovies = async () => {\n        try {\n            const searchValue = query.trim().toLowerCase();\n            const data = await getSearchMovies(searchValue, page);\n            if (data.length === 0) {\n              toast.warn(`Sorry! We didn't find anything, change your request!`);\n              return;\n            }\n            setMovies(data);\n            setPage(page);\n            return;\n        }\n        catch{\n            setMovies(null);\n            toast.error('Ops! Something went wrong!');\n            setError(error)\n        };\n    } \n    fetchSearchMovies();\n }, [error, page, query]);\n\nconst searchFilms = query => {\n  const nextMovies =  query !== '' && { query };\n  setSearchParams(nextMovies);\n};\n\nconst handleOnPageChange = useCallback(page => {\n  setPage(page);\n}, [setPage]);\n\nreturn (\n<Container>\n{error && <h2>Something went wrong. Try again later.</h2>}\n<SearchMovies search={query} onChange={searchFilms}/>\n<MoviesList movies={movies} />\n{page && movies.length !== 0 && <Button onClick={handleOnPageChange}\npage={page}\ntotalPages={movies.total_pages}/>}\n</Container>\n)\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3/';\nconst apiKey = '0d4113c4d386d0ed78ee145d93be1c52';\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';;\n\nexport const getAllMovie = async(page) => {\n   const response = await axios.get(`trending/movie/day?api_key=${apiKey}&page=${page}`);\n   return response.data.results;\n};\n\nexport const getSearchMovies = async(query, page) => {\n   const response = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n   return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}?api_key=${apiKey}&language=en-US`);\n   return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n   return response.data.cast;\n};\n\n\n\n\nexport const getMovieReviews = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n   return response.data.results;\n};"],"names":["Wrap","styled","Btn","page","totalPages","onClick","type","disabled","Item","listIcon","List","MovieLink","Link","MoviesList","movies","location","useLocation","elements","map","title","id","state","from","to","defaultProps","Container","background","MainTitle","Icon","GoSearch","onChange","search","DebounceInput","debounceTimeout","name","value","placeholder","event","target","autoComplete","autoFocus","required","useState","setMovies","error","setError","setPage","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchSearchMovies","searchValue","trim","toLowerCase","getSearchMovies","data","length","toast","handleOnPageChange","useCallback","Button","total_pages","axios","apiKey","baseImgUrl","getAllMovie","response","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}