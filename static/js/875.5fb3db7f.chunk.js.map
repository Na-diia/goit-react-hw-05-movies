{"version":3,"file":"static/js/875.5fb3db7f.chunk.js","mappings":"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","sources":["components/MovieData/movie-data.styled.js","components/MovieData/MovieData.jsx","pages/MovieDetails/movie-details.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetch-movie.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FlexWrap = styled.div`\n    padding: 20px;\n     display: flex;\n`;\n\nexport const Wrapper = styled.div` \n    padding: 0px 20px;\n    flex-direction: column;\n    justify-content: center;\n    align-self: flex-start;\n`;\n\nexport const Title = styled.h2`\n    font-family: 'Gambetta', serif;\n    margin-bottom: 12px;\n    margin-top: 12px;\n    font-size: 28px;\n    text-transform: uppercase;\n    font-family: 'Gambetta', serif;\n    transition: 700ms ease;\n    font-variation-settings: \"wght\" 311;\n    margin-bottom: 0.8rem;\n    color: #000000  ;\n\n    &:hover {\n    font-variation-settings: \"wght\" 582; \n    letter-spacing: 1px;\n    }\n`;\n\nexport const Poster = styled.img`\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 5px;\n    align-self: flex-start;\n    height: 400px;\n    object-fit: contain;\n\n    &:hover {\n    box-shadow: 0 0 2px 1px #000;\n}\n`; \n\nexport const List = styled.ul`\n    list-style: none;\n    margin-left: 10px;\n`;\n\nexport const Name = styled.p`\n    font-weight: bold;\n    font-size: 22px;\n    color: #000000;\n    font-family: 'Gambetta', serif;\n`;\n\nexport const Span = styled.span`\n    font-size: 20px;\n    font-weight: 400;\n    color: #000000 ;\n`;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { baseImgUrl } from 'services/fetch-movie';\nimport defaultPoster from '../../images/default-poster.jpg';\nimport { Title, Wrapper, Poster, FlexWrap, List, Name, Span } from './movie-data.styled';\n\n\nconst MovieData = ({name, img, text, release, tag, score, genre, count}) => {\n  const [loadImage, setLoadImage] = useState(false);\n\n    return (\n      <FlexWrap>\n      <Poster src={img === null ?  defaultPoster : baseImgUrl + `${img}`} alt={name}\n      onLoad={() => setLoadImage(true)}/>\n      <SkeletonTheme baseColor=\"#E0CEA7 \" highlightColor=\"#a5a5a5\">\n       {loadImage === false && <Skeleton width={267} height={400} />}\n    </SkeletonTheme>\n      <Wrapper>\n      <Title>{name}</Title>\n      <List>\n      <li> \n      <Name>User score: {!score ? (<Span>No ratings yet</Span>) : (<Span>{score} ({count}).</Span>)}</Name>\n      </li>\n      <li>\n      <Name>Slogan: <Span>{!tag  ? (<Span>We don't have any slogan for this movie.</Span>) : tag}</Span></Name>\n      </li>\n      <li>\n      <Name>Release date: <Span>{release}</Span></Name>\n      </li>\n      <li>\n      <Name>Genres: <Span>{!genre ? (<Span>We don't have any genre for this movie</Span>) : genre}.</Span></Name>\n      </li>\n      <li>\n      <Name>Overview: <Span>{!text ? (<Span>We don't have any overview for this movie.</Span>) : text}</Span></Name>\n      </li>\n      </List>\n      </Wrapper> \n    </FlexWrap>);\n};\n\nexport default MovieData;\n\nMovieData.propTypes = {\n    name: PropTypes.string, \n    img: PropTypes.string, \n    text: PropTypes.string, \n    release: PropTypes.string, \n    tag: PropTypes.string,\n    score: PropTypes.number,\n    count: PropTypes.number,\n};","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport background from 'images/background-img.jpg';\nimport goBack from 'images/back.png';\n\nexport const Box = styled.div`\n    max-width: 1200px;\n    height: 100vh;\n    margin: 0px auto;\n    padding: 0px 0px;\n\n    &::after {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: calc(100vh + 10px);\n    background-image: ${props => props.backdrop === null ? `url(${background})` :\n    `url('https://image.tmdb.org/t/p/w500/${props.backdrop}')`};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    z-index: -1;\n    opacity: 0.45;\n    }\n`;\n\nexport const Button = styled.button`\n  transition: all .2s;\n  border: solid;\n  border-color: #312E27;\n  border-radius: 50%;\n  margin-left: 20px;\n  margin-top: 20px;\n  width: 50px;\n  height: 50px;\n  background-color: transparent;\n  background-image: url(${goBack});\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n\n  &:hover, &:focus {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);}\n`;\n\nexport const CastLink = styled(NavLink)`\n  text-decoration: none;\n  padding: 10px 32px;\n  border-radius: 100px;\n  transition: all .2s;\n  margin-left: 40px;\n  margin-right: 12px;\n  margin-bottom: 20px; \n  background: #000000;\n  background: linear-gradient(to right, #434343, #000000); \n  color: #FFFFFF;  \n\n  &:hover, &:focus{\n    font-weight: bold;\n  }\n\n  &.active{\n    font-weight: bold;\n  }\n`;\n\nexport const ReviewsLink = styled(NavLink)`\n text-decoration: none;\n padding: 10px 20px;\n border-radius: 100px;\n transition: all .2s;\n margin-left: 12px;\n margin-bottom: 20px; \n background: #000000;\n background: linear-gradient(to right, #434343, #000000); \n color: #FFFFFF;  \n\n &:hover, &:focus{\n  font-weight: bold;\n }\n\n &.active{\n  font-weight: bold;\n}\n`;\n\nBox.propTypes = {\n  backdrop: PropTypes.string,\n};\n\nButton.propTypes = {\n  goBack: PropTypes.string,\n};\n","import { useState, useEffect} from 'react';\nimport { Outlet, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\n\nimport { getMovieDetails } from 'services/fetch-movie';\nimport MovieData from 'components/MovieData/MovieData';\nimport Loader from 'components/Loader/Loader';\n\nimport { Box, Button, CastLink, ReviewsLink } from './movie-details.styled';\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState([]);\n\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const from =location.state?.from || \"/movies\";\n\n    useEffect(() => {\n      const fetchMovieDetails = async() => {\n        try{\n          const data = await getMovieDetails(movieId);\n          setMovie(data);\n        }\n        catch(error){\n           setMovie(null);\n           toast.error('Ops! Something went wrong!');\n        };\n      };\n      fetchMovieDetails();\n    }, [movieId]);\n\n    const goBack = () => navigate(from);\n\n    const genresList = movie?.genres?.map(genre => genre.name).join(', ');\n   \n    return (\n     <Box backdrop={movie.backdrop_path}>\n    <Button type='button' onClick={goBack}></Button>\n    {!movie ? (<Loader />) : <MovieData \n     genre={genresList}\n     score={movie.vote_average}\n     count={movie.vote_count}\n     name={movie.title}\n     img={movie.poster_path}\n     text={movie.overview} \n     release={movie.release_date}\n     tag={movie.tagline}/>}\n     <CastLink state={{from}} to={`/movies/${movieId}/cast`}>Cast</CastLink>\n     <ReviewsLink state={{from}} to={`/movies/${movieId}/reviews`}>Reviews</ReviewsLink>\n     <Outlet />\n    </Box>\n    )\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3/';\nconst apiKey = '0d4113c4d386d0ed78ee145d93be1c52';\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';;\n\nexport const getAllMovie = async(page) => {\n   const response = await axios.get(`trending/movie/day?api_key=${apiKey}&page=${page}`);\n   return response.data.results;\n};\n\nexport const getSearchMovies = async(query, page) => {\n   const response = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n   return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}?api_key=${apiKey}&language=en-US`);\n   return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n   return response.data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n   return response.data.results;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["FlexWrap","styled","Wrapper","Title","Poster","List","Name","Span","name","img","text","release","tag","score","genre","count","useState","loadImage","setLoadImage","src","defaultPoster","baseImgUrl","alt","onLoad","baseColor","highlightColor","width","height","Box","props","backdrop","background","Button","goBack","CastLink","NavLink","ReviewsLink","propTypes","PropTypes","movie","setMovie","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieDetails","getMovieDetails","data","toast","genresList","genres","map","join","backdrop_path","type","onClick","vote_average","vote_count","title","poster_path","overview","release_date","tagline","Loader","to","axios","apiKey","getAllMovie","page","response","results","getSearchMovies","query","getMovieCast","cast","getMovieReviews","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","SkeletonThemeContext","React","Skeleton","_a","_b","_c","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el","SkeletonTheme","children","Provider","value"],"sourceRoot":""}