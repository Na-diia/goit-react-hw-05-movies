{"version":3,"file":"static/js/544.a57c228c.chunk.js","mappings":"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","sources":["components/Button/button.styled.js","components/Button/Button.jsx","components/MoviesList/movies-list.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","pages/Home/home.styled.js","services/fetch-movie.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n    display: flex;\n    margin-left: 28px;\n`;\n\nexport const Btn = styled.button`\n    background-color: #fff;\n    color:  #432A68 ;\n    font-size: 16px;\n    padding: 10px 20px;\n    display: inline-block;\n    border-radius: 100px;\n    border-color: transparent;\n    transition: all .2s;\n    margin-right: 12px;\n    margin-bottom: 20px;\n\n    &:hover, &:focus {\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    color: #8E0E00;\n    font-weight: bold;\n    }\n    &:disabled {\n    cursor: not-allowed;\n    opacity: 0.4;\n    color:  #432A68 ;\n    font-weight: 400;\n    }\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { Wrap, Btn } from './button.styled';\n\nconst Button =({page, totalPages, onClick}) => {\n\n    return (\n        <Wrap>\n         {page >= 2 &&<Btn type='button' \n         disabled={page === 1}\n         onClick={() => onClick(page - 1)}>Prev page</Btn>}\n         <Btn type='button'  \n         onClick={() => onClick(page + 1)} \n         disabled={page === totalPages}>Next page</Btn>\n        </Wrap>\n    )\n};\n\nexport default Button;\n\nButton.propTypes = {\n    page: PropTypes.number.isRequired,\n    totalPages: PropTypes.number,\n    onClick: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport listIcon from 'images/list-icon.png';\n\nexport const Item = styled.li`\n    padding: 5px;\n    margin-left: 10px;\n    position: relative;\n    display: flex;\n\n    &::before{\n    content: \"\";\n    background-image: url(${listIcon});\n    background-size: cover;\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    left: -25px;}\n\n    @media screen and (max-width: 480px) {\n        &::before{\n            width: 15px;\n            height: 15px;\n        }\n    };\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin-left: 45px;\n`;\n\nexport const MovieLink = styled(Link)`\n    text-decoration: none;\n    color: #22211B  ;\n    font-size: 20px;\n    font-weight: 500;\n\n    &:hover, &:focus{\n    transform: translateX(20px); \n   };\n\n   @media screen and (max-width: 767px) {\n    font-size: 16px;\n\n    &:hover, &:focus{\n    transform: translateX(16px); };\n   };\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { Item, List, MovieLink } from './movies-list.styled';\n\nconst MoviesList = ({movies}) => {\n  const location = useLocation();\n\n  const elements = movies.map(({title, id}) => \n    <Item key={id} >\n    <MovieLink state={{from: location}} to={`/movies/${id}`}>{title}</MovieLink>\n    </Item>);\n\n  return (\n     <List>\n     {elements}\n     </List>\n  )\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n   movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};","import { useState, useEffect, useCallback} from 'react'; \nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Button from 'components/Button/Button';\n\nimport { getAllMovie } from 'services/fetch-movie';\n\nimport { Container, MainTitle } from './home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n     setStatus('pending');\n      const fetchAllMovies = async() => {\n        try {\n        const data = await getAllMovie(page);\n        setMovies(data);\n        setPage(page);\n        setStatus('resolved');\n        }\n        catch(error) {\n          setStatus('rejected');\n          setError(error);\n        }\n      }\n      fetchAllMovies();\n    }, [page]);\n\n  const handlePageChange = useCallback( \n    page => {\n      setPage(page);\n     }, [setPage]);\n\n    return (\n        <Container>\n        {error && <h2>Something went wrong. Try again later.</h2>}\n        <MainTitle>Trending today:</MainTitle>\n        <SkeletonTheme baseColor=\"#E0CEA7\" highlightColor=\"#a5a5a5\">\n        {!movies ? (\n          <Skeleton count={15} style={{ height: 30, width: 300, marginTop: 15 }} />\n        ) : (\n          <div>\n        <MoviesList movies={movies}/>\n        {page && movies.length !== 0 &&  status !== 'pending' &&\n          (<Button \n          page={page}\n          totalPages={movies.total_pages}\n          onClick={handlePageChange}/>)}</div>)}\n        </SkeletonTheme>\n        </Container>\n    );\n};\n\nexport default Home;","import styled from 'styled-components';\nimport background from 'images/background-img.jpg';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  height: 100vh;\n  margin: 0px 0px;\n  padding: 0px 0px;\n\n  &::before {\n    content: \"\";\n    background-image: url(${background});\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    opacity: 0.7;\n}`;\n\nexport const MainTitle = styled.h2`\n  font-family: 'Gambetta', serif;\n  transition: 700ms ease;\n  font-variation-settings: \"wght\" 311;\n  margin-bottom: 0.8rem;\n  font-weight: bold;\n  margin-left: 35px;\n  font-size: 28px;\n  text-transform: uppercase;\n  transition: 700ms ease;\n   color: #090907 ;\n\n  &:hover {\n    font-variation-settings: \"wght\" 582; \n    letter-spacing: 1px;\n    }\n`;","import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3/';\nconst apiKey = '0d4113c4d386d0ed78ee145d93be1c52';\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';;\n\nexport const getAllMovie = async(page) => {\n   const response = await axios.get(`trending/movie/day?api_key=${apiKey}&page=${page}`);\n   return response.data.results;\n};\n\nexport const getSearchMovies = async(query, page) => {\n   const response = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n   return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}?api_key=${apiKey}&language=en-US`);\n   return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n   return response.data.cast;\n};\n\n// export const getCastInformation = async (actorId) => {\n//   const response = await axios.get(``)\n// };\n\nexport const getMovieReviews = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n   return response.data.results;\n};","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["Wrap","styled","Btn","page","totalPages","onClick","type","disabled","Item","listIcon","List","MovieLink","Link","MoviesList","movies","location","useLocation","elements","map","title","id","state","from","to","defaultProps","useState","setMovies","error","setError","setPage","status","setStatus","useEffect","fetchAllMovies","getAllMovie","data","handlePageChange","useCallback","baseColor","highlightColor","length","total_pages","count","style","height","width","marginTop","Container","background","MainTitle","axios","apiKey","baseImgUrl","response","results","getSearchMovies","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","SkeletonThemeContext","React","Skeleton","_a","_b","_c","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el","SkeletonTheme","children","Provider","value"],"sourceRoot":""}