{"version":3,"file":"static/js/186.9745738b.chunk.js","mappings":"yOAkDA,UA3CgB,WACb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBP,OApBDE,EAAAA,EAAAA,YAAU,WACP,GAAGN,EAAS,CACb,IAAMO,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,cAERK,EAFQ,OAGdR,EAAWQ,GACXN,GAAa,GAJC,mDAQdF,EAAW,MARG,yBAWdE,GAAa,GAXC,oFAAH,qDAclBI,GACA,CACD,GAAE,CAACH,EAASJ,KAGf,yBACsB,IAAnBA,EAAQU,QAAgBR,GACzB,SAAC,KAAD,yDACC,SAAC,KAAD,UACCF,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,SAAC,KAAD,WACA,UAAC,KAAD,YACA,UAAC,KAAD,uBAAoB,SAAC,KAAD,UAAaD,QACjC,SAAC,KAAD,UAAaC,QAHIF,EADR,OAWhB,C,6OC9CYG,EAAgBC,EAAAA,GAAAA,IAAH,qVAiBbC,EAAcD,EAAAA,GAAAA,GAAH,+KASXE,EAAaF,EAAAA,GAAAA,GAAH,6CAIVG,EAAaH,EAAAA,GAAAA,EAAH,wGAMVI,EAAaJ,EAAAA,GAAAA,KAAH,uGAOVK,EAAaL,EAAAA,GAAAA,EAAH,gEAKVM,EAAON,EAAAA,GAAAA,GAAF,gO,2NChDlBO,EAAAA,EAAAA,SAAAA,QAAwB,gCACxB,IAAMC,EAAS,mCAEFC,EAAa,kCAEbC,EAAW,mCAAG,WAAMC,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,qCAAwCC,EAAxC,iBAAuDG,IADtD,cAClBC,EADkB,yBAEjBA,EAASnB,KAAKoB,SAFG,2CAAH,sDAKXC,EAAe,mCAAG,WAAMC,EAAOJ,GAAb,uFACLJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAiEO,EAAjE,iBAA+EJ,EAA/E,yBADK,cACtBC,EADsB,yBAErBA,EAASnB,KAAKoB,SAFO,2CAAH,wDAKfG,EAAe,mCAAG,WAAO5B,GAAP,uFACLmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,EAAtC,oBADK,cACtBI,EADsB,yBAErBA,EAASnB,MAFY,2CAAH,sDAKfwB,EAAY,mCAAG,WAAO7B,GAAP,uFACFmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,EAA9C,oBADE,cACnBI,EADmB,yBAElBA,EAASnB,KAAKyB,MAFI,2CAAH,sDASZ1B,EAAe,mCAAG,WAAOJ,GAAP,uFACLmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,EAA9C,2BADK,cACtBI,EADsB,yBAErBA,EAASnB,KAAKoB,SAFO,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/Reviews/reviews.styled.js","services/fetch-movie.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/fetch-movie';\n\nimport { WrapperReview, ReviewsList, ReviewItem, AuthorText, AuthorSpan, Title,  TextReview } from './reviews.styled';\n\nconst Reviews = () => {\n   const [reviews, setReviews] = useState([]);\n   const [isLoading, setIsLoading] = useState(false);\n   const { movieId } = useParams();\n\n   useEffect(() => {\n      if(reviews) {\n     const fetchReviews = async () => {\n        try {\n            const data = await getMovieReviews(movieId);\n            setReviews(data);\n            setIsLoading(true);\n            return;\n        }\n        catch{\n            setReviews(null);\n        }\n        finally {\n            setIsLoading(false);\n        };\n     }\n     fetchReviews();\n    };\n   }, [movieId, reviews]);\n\n    return (\n <div>\n   {reviews.length === 0 || isLoading ?  (\n   <Title>We don't have any reviews for this movie.</Title>) : (\n    <ReviewsList>\n    {reviews.map(({id, author, content}) => (\n        <ReviewItem key={id}>\n        <WrapperReview>\n        <AuthorText>Author: <AuthorSpan>{author}</AuthorSpan></AuthorText>\n        <TextReview>{content}</TextReview>\n        </WrapperReview>\n        </ReviewItem>\n        ))}\n    </ReviewsList>)}\n  </div>\n );\n}; \n\nexport default Reviews;","import styled from 'styled-components';\n\nexport const WrapperReview = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 12px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  transition: all 0.2s ease-in-out;\n  padding: 5px;\n \n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n    backdrop-filter: blur(5px);\n    color: #000000;\n  }\n`;\n\nexport const ReviewsList = styled.ul`\n    list-style: none;\n    padding:30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nexport const ReviewItem = styled.li`\n    // padding:5px;\n`;\n\nexport const AuthorText = styled.p`\n   font-weight: bold;\n   font-size: 20px;\n   font-family: 'Gambetta', serif;\n`; \n\nexport const AuthorSpan = styled.span`\n   font-weight: 400;\n   font-size:20px;\n   \n   text-decoration: underline;\n`;\n\nexport const TextReview = styled.p`\n  font-size:18px;\n  line-height: 1.2;\n`;\n\nexport const Title= styled.h2`\n    font-family: 'Gambetta', serif;\n    font-variation-settings: \"wght\" 311;\n    margin-top:30px;\n    margin-bottom: 0.8rem;\n    font-weight: bold;\n    margin-left: 20px;\n    font-size: 28px;\n`;","import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3/';\nconst apiKey = '0d4113c4d386d0ed78ee145d93be1c52';\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';;\n\nexport const getAllMovie = async(page) => {\n   const response = await axios.get(`trending/movie/day?api_key=${apiKey}&page=${page}`);\n   return response.data.results;\n};\n\nexport const getSearchMovies = async(query, page) => {\n   const response = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n   return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}?api_key=${apiKey}&language=en-US`);\n   return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n   return response.data.cast;\n};\n\n// export const getCastInformation = async (actorId) => {\n//   const response = await axios.get(``)\n// };\n\nexport const getMovieReviews = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n   return response.data.results;\n};"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviews","getMovieReviews","data","length","map","id","author","content","WrapperReview","styled","ReviewsList","ReviewItem","AuthorText","AuthorSpan","TextReview","Title","axios","apiKey","baseImgUrl","getAllMovie","page","response","results","getSearchMovies","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}