{"version":3,"file":"static/js/509.8a86d287.chunk.js","mappings":"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","sources":["components/Cast/cast.styled.js","components/Cast/Cast.jsx","components/Reviews/reviews.styled.js","services/fetch-movie.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n   margin-top: 30px;\n   list-style: none;\n   padding:5px;\n   display:flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   gap:16px;\n`;\n\nexport const ImageActors = styled.img`\n   max-width:  100%;\n   border-radius: 4px;\n   height: 225px;\n`;\n\nexport const Item = styled.li`\n   flex-basis: 150px;\n   box-shadow: rgb(0 0 0 / 12%) 0px 1px 3px, rgb(0 0 0 / 14%) 0px 1px 1px, rgb(0 0 0 / 20%) 0px 2px 1px;\n \n   &:hover {\n      transform: scale(1.05);\n   }\n`;\n\nexport const Info = styled.p`\n   font-size:16px;\n   font-weight: 500;\n   text-align: center;\n`;\n\nexport const Character = styled.p`\n  text-align: center;\n`;","import { useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { getMovieCast, baseImgUrl } from 'services/fetch-movie';\n\nimport { List, ImageActors, Info, Item, Character } from './cast.styled';\nimport { Title } from 'components/Reviews/reviews.styled';\nimport defaultCastImg from '../../images/cast-default-img.jpg';\n\nconst Cast = () => {\n    const [items, setItems] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n      if(items) {\n        const fetchCast = async() => {\n          try{\n            const data = await getMovieCast(movieId);\n            setItems(data);\n            return;\n           }\n          catch{\n            setItems(null);\n        }};\n        fetchCast();\n    };\n    }, [items, movieId]);\n\n    const elements = items.map(({id, name, profile_path, character}) => \n        (<Item key={id}>\n          <ImageActors src={profile_path ? baseImgUrl + `${profile_path}` : defaultCastImg} alt={name} />\n          <Info>{name}</Info>\n          <Character>{character}</Character>\n        </Item>));\n\n    return (\n      <div>\n      {items.length >= 1 ? (<List>\n        {elements}\n        </List>) : (\n          <SkeletonTheme baseColor=\"#000000\" highlightColor=\"#444\">\n        <Title> <Skeleton count={3} />We don't have any cast for this movie.</Title>\n        </SkeletonTheme>\n      )}\n      </div>\n    );\n};\n\nexport default Cast;","import styled from 'styled-components';\n\nexport const WrapperReview = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 12px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  transition: all 0.2s ease-in-out;\n  padding: 5px;\n \n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n    backdrop-filter: blur(5px);\n    color: #000000;\n  }\n`;\n\nexport const ReviewsList = styled.ul`\n    list-style: none;\n    padding:30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nexport const ReviewItem = styled.li`\n    // padding:5px;\n`;\n\nexport const AuthorText = styled.p`\n   font-weight: bold;\n   font-size: 20px;\n   font-family: 'Gambetta', serif;\n`; \n\nexport const AuthorSpan = styled.span`\n   font-weight: 400;\n   font-size:20px;\n   \n   text-decoration: underline;\n`;\n\nexport const TextReview = styled.p`\n  font-size:18px;\n  line-height: 1.2;\n`;\n\nexport const Title= styled.h2`\n    font-family: 'Gambetta', serif;\n    font-variation-settings: \"wght\" 311;\n    margin-top:30px;\n    margin-bottom: 0.8rem;\n    font-weight: bold;\n    margin-left: 20px;\n    font-size: 28px;\n`;","import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3/';\nconst apiKey = '0d4113c4d386d0ed78ee145d93be1c52';\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';;\n\nexport const getAllMovie = async(page) => {\n   const response = await axios.get(`trending/movie/day?api_key=${apiKey}&page=${page}`);\n   return response.data.results;\n};\n\nexport const getSearchMovies = async(query, page) => {\n   const response = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n   return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}?api_key=${apiKey}&language=en-US`);\n   return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n   return response.data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n   const response = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n   return response.data.results;\n};","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["List","styled","ImageActors","Item","Info","Character","useState","items","setItems","movieId","useParams","useEffect","fetchCast","getMovieCast","data","elements","map","id","name","profile_path","character","src","baseImgUrl","defaultCastImg","alt","length","baseColor","highlightColor","count","WrapperReview","ReviewsList","ReviewItem","AuthorText","AuthorSpan","TextReview","Title","axios","apiKey","getAllMovie","page","response","results","getSearchMovies","query","getMovieDetails","cast","getMovieReviews","SkeletonThemeContext","React","Skeleton","_a","_b","_c","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","width","height","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el","SkeletonTheme","children","Provider","value"],"sourceRoot":""}